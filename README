<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>KDBNoSQL - Manual de Usuario</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            line-height: 1.6;
        }
        h1, h2, h3 {
            color: #333;
        }
        code {
            background-color: #f4f4f4;
            padding: 5px;
            border-radius: 4px;
            display: block;
            margin: 10px 0;
        }
        pre {
            background-color: #f4f4f4;
            padding: 10px;
            border-radius: 4px;
            overflow: auto;
        }
    </style>
</head>
<body>
    <h1>KDBNoSQL</h1>
    <h2>Introducción</h2>
    <p>KDBNoSQL es una aplicación web que permite gestionar archivos JSON de manera sencilla y eficiente. Este manual proporciona instrucciones detalladas sobre cómo utilizar la aplicación, desde la creación de usuarios hasta la manipulación de archivos JSON.</p>

    <h2>Requisitos Previos</h2>
    <ul>
        <li>Navegador web moderno (Chrome, Firefox, Edge, etc.)</li>
        <li>Conexión a internet para acceder a la aplicación</li>
        <li>Node.js y npm instalados para ejecutar el servidor localmente</li>
    </ul>

    <h2>Instalación y Ejecución del Servidor</h2>
    <h3>Clonar el Repositorio</h3>
    <code>
        git clone &lt;URL_DEL_REPOSITORIO&gt;<br>
        cd KDBNoSQL
    </code>

    <h3>Instalar Dependencias</h3>
    <code>
        npm install
    </code>

    <h3>Ejecutar el Servidor</h3>
    <code>
        node server.js
    </code>

    <h2>Acceder a la Aplicación</h2>
    <p>Abre tu navegador y ve a <a href="http://localhost:3000/admin">http://localhost:3000/admin</a></p>

    <h2>Interfaz de Usuario</h2>
    <p>La interfaz de usuario de KDBNoSQL está dividida en tres secciones principales:</p>
    <ul>
        <li>Login</li>
        <li>Crear Usuario</li>
        <li>Aplicación Principal</li>
    </ul>

    <h3>1. Login</h3>
    <p>Para iniciar sesión:</p>
    <ul>
        <li>Ingresa tu nombre de usuario y contraseña.</li>
        <li>Haz clic en el botón "Login".</li>
        <li>Si no tienes una cuenta, haz clic en "Create User" para crear una nueva.</li>
    </ul>

    <h3>2. Crear Usuario</h3>
    <p>Para crear un nuevo usuario:</p>
    <ul>
        <li>Ingresa un nombre de usuario y una contraseña.</li>
        <li>Haz clic en el botón "Create User".</li>
    </ul>

    <h3>3. Aplicación Principal</h3>
    <p>Una vez que hayas iniciado sesión, tendrás acceso a la aplicación principal, que incluye las siguientes funcionalidades:</p>
    <ul>
        <li>Crear Archivo JSON</li>
        <li>Listar Archivos JSON</li>
        <li>Ver y Editar Archivos JSON</li>
        <li>Eliminar Archivo JSON</li>
        <li>Tabla de Datos</li>
    </ul>

    <h4>Crear Archivo JSON</h4>
    <ul>
        <li>Ingresa el nombre del archivo en el campo de texto.</li>
        <li>Haz clic en el botón "Create".</li>
    </ul>

    <h4>Listar Archivos JSON</h4>
    <ul>
        <li>Selecciona un archivo del menú desplegable para ver su contenido.</li>
    </ul>

    <h4>Ver y Editar Archivos JSON</h4>
    <ul>
        <li>Selecciona un archivo del menú desplegable.</li>
        <li>El contenido del archivo se mostrará en el editor.</li>
        <li>Realiza los cambios necesarios.</li>
        <li>Haz clic en el botón "Save Changes" para guardar los cambios.</li>
    </ul>

    <h4>Eliminar Archivo JSON</h4>
    <ul>
        <li>Selecciona el archivo que deseas eliminar del menú desplegable.</li>
        <li>Haz clic en el botón "Delete Selected File".</li>
    </ul>

    <h4>Tabla de Datos</h4>
    <p>Los datos del archivo JSON seleccionado se mostrarán en una tabla. Puedes filtrar los datos ingresando texto en el campo de filtro.</p>

    <h2>Uso de la API</h2>
    <p>La aplicación proporciona una API que puedes utilizar para interactuar con los archivos JSON desde otras aplicaciones. A continuación se describen los endpoints disponibles:</p>

    <h3>Iniciar Sesión</h3>
    <p>Endpoint: POST /login</p>
    <h4>Cuerpo de la Solicitud:</h4>
    <pre>
{
  "username": "tu_usuario",
  "password": "tu_contraseña"
}
    </pre>
    <h4>Respuesta:</h4>
    <pre>
{
  "token": "tu_token"
}
    </pre>
    <h4>Ejemplo en PowerShell:</h4>
    <pre>
$headers = @{
    "Content-Type" = "application/json"
}

$body = @{
    "username" = "tu_usuario"
    "password" = "tu_contraseña"
} | ConvertTo-Json

Invoke-WebRequest -Uri "http://localhost:3000/login" -Method POST -Headers $headers -Body $body
    </pre>
    <h4>Ejemplo en JavaScript:</h4>
    <pre>
fetch('http://localhost:3000/login', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json'
    },
    body: JSON.stringify({ username: 'tu_usuario', password: 'tu_contraseña' })
})
.then(response => response.json())
.then(data => {
    console.log('Token:', data.token);
    localStorage.setItem('token', data.token);
})
.catch(error => {
    console.error('Error al iniciar sesión:', error);
});
    </pre>

    <h3>Listar Archivos JSON</h3>
    <p>Endpoint: GET /list-json</p>
    <h4>Encabezados de la Solicitud:</h4>
    <pre>
{
  "Authorization": "Bearer tu_token"
}
    </pre>
    <h4>Respuesta:</h4>
    <pre>
[
  "archivo1.json",
  "archivo2.json"
]
    </pre>
    <h4>Ejemplo en JavaScript:</h4>
    <pre>
const token = localStorage.getItem('token');

fetch('http://localhost:3000/list-json', {
    method: 'GET',
    headers: {
        'Authorization': `Bearer ${token}`
    }
})
.then(response => response.json())
.then(data => {
    console.log('Archivos JSON:', data);
})
.catch(error => {
    console.error('Error al listar archivos JSON:', error);
});
    </pre>

    <h3>Obtener Contenido de un Archivo JSON</h3>
    <p>Endpoint: GET /get-json-content?fileName=nombre_del_archivo.json</p>
    <h4>Encabezados de la Solicitud:</h4>
    <pre>
{
  "Authorization": "Bearer tu_token"
}
    </pre>
    <h4>Respuesta:</h4>
    <pre>
{
  "clave1": "valor1",
  "clave2": "valor2"
}
    </pre>
    <h4>Ejemplo en JavaScript:</h4>
    <pre>
const token = localStorage.getItem('token');
const fileName = 'nombre_del_archivo.json';

fetch(`http://localhost:3000/get-json-content?fileName=${fileName}`, {
    method: 'GET',
    headers: {
        'Authorization': `Bearer ${token}`
    }
})
.then(response => response.json())
.then(data => {
    console.log('Contenido del archivo JSON:', data);
})
.catch(error => {
    console.error('Error al obtener el contenido del archivo JSON:', error);
});
    </pre>

    <h3>Crear un Archivo JSON</h3>
    <p>Endpoint: POST /create-json</p>
    <h4>Cuerpo de la Solicitud:</h4>
    <pre>
{
  "fileName": "nombre_del_archivo"
}
    </pre>
    <h4>Encabezados de la Solicitud:</h4>
    <pre>
{
  "Content-Type": "application/json",
  "Authorization": "Bearer tu_token"
}
    </pre>
    <h4>Respuesta:</h4>
    <pre>
{
  "message": "Archivo JSON creado"
}
    </pre>
    <h4>Ejemplo en JavaScript:</h4>
    <pre>
const token = localStorage.getItem('token');
const fileName = 'nombre_del_archivo';

fetch('http://localhost:3000/create-json', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({ fileName })
})
.then(response => response.json())
.then(data => {
    console.log('Archivo JSON creado:', data.message);
})
.catch(error => {
    console.error('Error al crear el archivo JSON:', error);
});
    </pre>

    <h3>Guardar Cambios en un Archivo JSON</h3>
    <p>Endpoint: POST /save-json-content</p>
    <h4>Cuerpo de la Solicitud:</h4>
    <pre>
{
  "fileName": "nombre_del_archivo.json",
  "content": { ... } // Contenido del archivo JSON
}
    </pre>
    <h4>Encabezados de la Solicitud:</h4>
    <pre>
{
  "Content-Type": "application/json",
  "Authorization": "Bearer tu_token"
}
    </pre>
    <h4>Respuesta:</h4>
    <pre>
{
  "message": "Archivo JSON guardado"
}
    </pre>
    <h4>Ejemplo en JavaScript:</h4>
    <pre>
const token = localStorage.getItem('token');
const fileName = 'nombre_del_archivo.json';
const content = { ... }; // Contenido del archivo JSON

fetch('http://localhost:3000/save-json-content', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({ fileName, content })
})
.then(response => response.json())
.then(data => {
    console.log('Archivo JSON guardado:', data.message);
})
.catch(error => {
    console.error('Error al guardar el archivo JSON:', error);
});
    </pre>

    <h3>Eliminar un Archivo JSON</h3>
    <p>Endpoint: DELETE /delete-json</p>
    <h4>Cuerpo de la Solicitud:</h4>
    <pre>
{
  "fileName": "nombre_del_archivo.json"
}
    </pre>
    <h4>Encabezados de la Solicitud:</h4>
    <pre>
{
  "Content-Type": "application/json",
  "Authorization": "Bearer tu_token"
}
    </pre>
    <h4>Respuesta:</h4>
    <pre>
{
  "message": "Archivo JSON eliminado"
}
    </pre>
    <h4>Ejemplo en JavaScript:</h4>
    <pre>
const token = localStorage.getItem('token');
const fileName = 'nombre_del_archivo.json';

fetch('http://localhost:3000/delete-json', {
    method: 'DELETE',
    headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({ fileName })
})
.then(response => response.json())
.then(data => {
    console.log('Archivo JSON eliminado:', data.message);
})
.catch(error => {
    console.error('Error al eliminar el archivo JSON:', error);
});
    </pre>

    <h2>Ayuda y Soporte</h2>
    <p>Si tienes alguna pregunta o necesitas ayuda, puedes abrir el modal de ayuda haciendo clic en el botón "?" en la esquina inferior derecha de la aplicación.</p>

    <h2>Conclusión</h2>
    <p>KDBNoSQL es una herramienta poderosa y flexible para la gestión de archivos JSON. Este manual proporciona una guía completa para utilizar la aplicación de manera efectiva. Si tienes alguna sugerencia o encuentras algún problema, no dudes en contactarnos.</p>
    <p>¡Gracias por usar KDBNoSQL!</p>

    <pre>
Licencia de Uso, Distribución y Modificación del Código de KDBNoSQL
Licencia
El código fuente de KDBNoSQL y su documentación están sujetos a los términos y condiciones de la siguiente licencia. Al utilizar, distribuir o modificar este código, usted acepta cumplir con los términos de esta licencia.

Permisos
Se otorga permiso, de forma gratuita, para cualquier persona que obtenga una copia de este software y de la documentación asociada (el "Software"), para usar, copiar, modificar, fusionar, publicar, distribuir, sublicenciar y/o vender copias del Software, sujeto a las siguientes condiciones:

Atribución: En cualquier uso, distribución o modificación del Software, debe incluir una atribución clara y visible a Kelvin José Familia Adames. La atribución debe incluir el nombre completo y, si es posible, un enlace a la fuente original del Software.

Copia de la Licencia: Debe incluir una copia de esta licencia en cualquier distribución del Software o de cualquier porción del mismo.

Sin Garantía: El Software se proporciona "tal cual", sin garantía de ningún tipo, ya sea expresa o implícita, incluyendo, pero no limitándose a, las garantías de comerciabilidad, adecuación para un propósito particular y no infracción. En ningún caso los autores o titulares de los derechos de autor serán responsables de cualquier reclamación, daños u otras responsabilidades, ya sean en una acción de contrato, agravio o de otro tipo, que surjan de, en relación con o en relación con el Software o el uso u otro trato en el Software.

Condiciones
Atribución: Cualquier uso, distribución o modificación del Software debe incluir una atribución clara y visible a Kelvin José Familia Adames. La atribución debe incluir el nombre completo y, si es posible, un enlace a la fuente original del Software.

Copia de la Licencia: Debe incluir una copia de esta licencia en cualquier distribución del Software o de cualquier porción del mismo.

Sin Garantía: El Software se proporciona "tal cual", sin garantía de ningún tipo, ya sea expresa o implícita, incluyendo, pero no limitándose a, las garantías de comerciabilidad, adecuación para un propósito particular y no infracción. En ningún caso los autores o titulares de los derechos de autor serán responsables de cualquier reclamación, daños u otras responsabilidades, ya sean en una acción de contrato, agravio o de otro tipo, que surjan de, en relación con o en relación con el Software o el uso u otro trato en el Software.

Atribución
Para cumplir con la condición de atribución, puede usar el siguiente texto en cualquier uso, distribución o modificación del Software:

KDBNoSQL fue creado por Kelvin José Familia Adames.
Para más información, visite [https://github.com/KelvinF87].

Contacto
Para cualquier consulta o solicitud adicional, puede contactar a Kelvin José Familia Adames en [https://github.com/KelvinF87].

Al utilizar, distribuir o modificar este código, usted acepta cumplir con los términos y condiciones de esta licencia. Gracias por su cooperación y por respetar los derechos de autor.

Kelvin José Familia Adames

[Saturday, January 18, 2025]

</pre>

</body>
</html>
